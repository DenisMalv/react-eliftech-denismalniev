{"version":3,"file":"static/js/153.e58637ae.chunk.js","mappings":"4MACA,EAA8B,+BAA9B,EAAkF,sCAAlF,EAA8I,uC,4DCQjIA,EAAY,WACvB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAA2CC,EAAAA,EAAAA,MAA3C,eAAOC,EAAP,YAAmBC,EAAnB,EAAmBA,UAAWC,EAA9B,EAA8BA,QACxBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEbL,GACFM,QAAQC,IAAI,gBAAiBP,GAG/B,IAAMQ,EAAc,mCAAG,WAAMC,GAAN,gGAGAV,EAAS,CAC1BL,MAAO,qBACPE,SAAU,cALO,QAGbc,EAHa,QAOVC,OACPP,EAAS,aACTF,GAASU,EAAAA,EAAAA,IAAQ,CAAEC,MAAOH,EAAKC,KAAKE,UATnB,gDAYnBZ,EAAQ,EAAD,IAZY,yDAAH,sDAgBda,EAAoB,SAAAC,GACxB,MAAwBA,EAAMC,cAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAAQD,GACN,IAAK,QACHtB,EAASuB,GACT,MACF,IAAK,WACHrB,EAAYqB,KAKZC,EAAY,mCAAG,WAAMJ,GAAN,8EACnBA,EAAMK,iBACAC,EAAY,CAChB3B,MAAAA,EACAE,SAAAA,GAJiB,SAMbY,EAAea,GANF,OAQnBC,IARmB,2CAAH,sDAcZA,EAAQ,WACZ3B,EAAS,IACTE,EAAY,KAGd,OACE,kBACE0B,aAAa,MACbC,SAAUL,EACVM,UAAWC,EAHb,WAKE,mBAAOD,UAAWC,EAAlB,WACE,qCACA,kBACEC,KAAK,QACLV,KAAK,QACLC,MAAOxB,EACPkC,SAAUd,QAGd,mBAAOW,UAAWC,EAAlB,sBAEE,kBACEC,KAAK,WACLV,KAAK,WACLC,MAAOtB,EACPgC,SAAUd,QAGd,mBAAQa,KAAK,SAASF,UAAWC,EAAjC,uBCtFN,EAJkB,WAChB,OAAO,SAAClC,EAAD","sources":["webpack://react-homework/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/LoginPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"LoginForm_contactForm__kvB7L\",\"contactForm__label\":\"LoginForm_contactForm__label__4a3c+\",\"contactForm__button\":\"LoginForm_contactForm__button__tMftF\"};","import css from './LoginForm.module.css';\r\n\r\nimport { useState } from 'react';\r\nimport { isToken } from 'redux/tokenSlice/tokenSlice';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLoginRTKMutation } from 'redux/RTKAuthApi/AuthApi';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport const LoginForm = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loginRTK, { isSuccess, isError }] = useLoginRTKMutation();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  if (isSuccess) {\r\n    console.log('user is loged', isSuccess);\r\n  }\r\n\r\n  const handleLoginRTK = async user => {\r\n    try {\r\n      // const ress = await loginRTK(user);\r\n      const ress = await loginRTK({\r\n        email: 'denismalv@mail.com',\r\n        password: 'denismalv',\r\n      });\r\n      if (ress.data) {\r\n        navigate('/contacts');\r\n        dispatch(isToken({ token: ress.data.token }));\r\n      }\r\n    } catch (error) {\r\n      isError(error);\r\n    }\r\n  };\r\n\r\n  const handleImputChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    // eslint-disable-next-line default-case\r\n    switch (name) {\r\n      case 'email':\r\n        setEmail(value);\r\n        break;\r\n      case 'password':\r\n        setPassword(value);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const userLogin = {\r\n      email,\r\n      password,\r\n    };\r\n    await handleLoginRTK(userLogin);\r\n\r\n    reset();\r\n  };\r\n\r\n  // qwertyuiqq@gmail.com\r\n  // 1234567890qq\r\n\r\n  const reset = () => {\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      onSubmit={handleSubmit}\r\n      className={css.contactForm}\r\n    >\r\n      <label className={css.contactForm__label}>\r\n        <span>email</span>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={handleImputChange}\r\n        />\r\n      </label>\r\n      <label className={css.contactForm__label}>\r\n        password\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={handleImputChange}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={css.contactForm__button}>\r\n        Login\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\n// function PrivateRoute() {\r\n//   const isLogin = useSelector(getIsLogin);\r\n\r\n//   return isLogin ? <Outlet /> : <Navigate to=\"login\" />;\r\n// }\r\n","import { LoginForm } from 'components/LoginForm/LoginForm';\r\n\r\nconst LoginPage = () => {\r\n  return <LoginForm />;\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":["LoginForm","useState","email","setEmail","password","setPassword","useLoginRTKMutation","loginRTK","isSuccess","isError","dispatch","useDispatch","navigate","useNavigate","console","log","handleLoginRTK","user","ress","data","isToken","token","handleImputChange","event","currentTarget","name","value","handleSubmit","preventDefault","userLogin","reset","autoComplete","onSubmit","className","css","type","onChange"],"sourceRoot":""}