{"version":3,"file":"static/js/760.8e36136f.chunk.js","mappings":"4MACA,EAA8B,kCAA9B,EAAqF,yCAArF,EAAoJ,0C,8BCIvIA,EAAe,WAAO,IAAD,IAChC,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAkCN,EAAAA,EAAAA,UAAS,IAA3C,sBAAOO,OAAP,SAAsBC,EAAtB,KACA,GAA8CC,EAAAA,EAAAA,MAA9C,eAAOC,EAAP,YAAsBC,EAAtB,EAAsBA,QAASC,EAA/B,EAA+BA,UAC/BC,QAAQC,KAAIL,EAAAA,EAAAA,OAcZ,IAAMM,EAAoB,SAAAC,GACxB,MAAwBA,EAAMC,cAAtBhB,EAAR,EAAQA,KAAMiB,EAAd,EAAcA,MAEd,OAAQjB,GACN,IAAK,OACHY,QAAQC,IAAIb,EAAMiB,GAClBhB,EAAQgB,GACR,MACF,IAAK,QACHL,QAAQC,IAAIb,EAAMiB,GAClBd,EAASc,GACT,MACF,IAAK,WACHL,QAAQC,IAAIb,EAAMiB,GAClBZ,EAAYY,KAKZC,EAAY,mCAAG,WAAMH,GAAN,gFACnBA,EAAMI,iBACAC,EAAO,CAAEpB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,GAFT,SAGKK,EAAYW,GAHjB,QAGbC,EAHa,QAITf,OAASC,EAASc,EAAUf,OACtCgB,IALmB,2CAAH,sDAQZA,EAAQ,WACZrB,EAAQ,IACRE,EAAS,IACTE,EAAY,KAGd,OACE,iCACE,kBAAMkB,SAAUL,EAAcM,UAAWC,EAAzC,WACE,mBAAOD,UAAWC,EAAlB,WACE,oCACA,kBACEC,KAAK,OACL1B,KAAK,OACLiB,MAAOjB,EACP2B,SAAUb,QAGd,mBAAOU,UAAWC,EAAlB,WACE,qCACA,kBACEC,KAAK,QACL1B,KAAK,QACLiB,MAAOf,EACPyB,SAAUb,QAGd,mBAAOU,UAAWC,EAAlB,WACE,wCACA,kBACEC,KAAK,WACL1B,KAAK,WACLiB,MAAOb,EACPuB,SAAUb,QAGd,mBAAQY,KAAK,SAASF,UAAWC,EAAjC,yBAIDd,IACC,cAAGiB,MAAO,CAAEC,WAAW,SAAWC,SAAU,IAA5C,sCAIDpB,IACC,cAAGkB,MAAO,CAAEC,WAAW,SAAWC,SAAU,IAA5C,2CAII,OAALxB,QAAK,IAALA,GAAA,UAAAA,EAAOyB,YAAP,eAAaC,YACZ,cAAGJ,MAAO,CAAEC,WAAW,SAAWC,SAAU,IAA5C,gDAII,OAALxB,QAAK,IAALA,GAAA,UAAAA,EAAOyB,YAAP,eAAaE,WACZ,cAAGL,MAAO,CAAEC,WAAW,SAAWC,SAAU,IAA5C,SACGxB,EAAMyB,KAAKE,cCvGtB,EAJqB,WACnB,OAAO,SAACnC,EAAD","sources":["webpack://react-homework/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"RegisterForm_contactForm__1Vs3H\",\"contactForm__label\":\"RegisterForm_contactForm__label__UTFK-\",\"contactForm__button\":\"RegisterForm_contactForm__button__P0nMD\"};","import css from './RegisterForm.module.css';\r\n\r\nimport { useState } from 'react';\r\nimport { useRegisterRTKMutation } from 'redux/RTKAuthApi/AuthApi';\r\n\r\nexport const RegisterForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error = false, setError] = useState('');\r\n  const [registerRTK, { isError, isSuccess }] = useRegisterRTKMutation();\r\n  console.log(useRegisterRTKMutation());\r\n  // if (isSuccess) {\r\n  //   console.log('register completed', isSuccess);\r\n  // }\r\n  // if (isError) {\r\n  //   console.log('register not completed', isError);\r\n  // }\r\n  // if (error?.data?.keyValue) {\r\n  //   console.log(`error email already exist`, error.data.keyValue.email);\r\n  // }\r\n  // if (error?.data?.message) {\r\n  //   console.log(`error password`, error.data.message);\r\n  // }\r\n\r\n  const handleImputChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    // eslint-disable-next-line default-case\r\n    switch (name) {\r\n      case 'name':\r\n        console.log(name, value);\r\n        setName(value);\r\n        break;\r\n      case 'email':\r\n        console.log(name, value);\r\n        setEmail(value);\r\n        break;\r\n      case 'password':\r\n        console.log(name, value);\r\n        setPassword(value);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const user = { name, email, password };\r\n    const resposnce = await registerRTK(user);\r\n    resposnce.error && setError(resposnce.error);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className={css.contactForm}>\r\n        <label className={css.contactForm__label}>\r\n          <span>name</span>\r\n          <input\r\n            type=\"name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleImputChange}\r\n          />\r\n        </label>\r\n        <label className={css.contactForm__label}>\r\n          <span>email</span>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleImputChange}\r\n          />\r\n        </label>\r\n        <label className={css.contactForm__label}>\r\n          <span>password</span>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleImputChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={css.contactForm__button}>\r\n          Register\r\n        </button>\r\n      </form>\r\n      {isSuccess && (\r\n        <p style={{ fontFamily: `Roboto`, fontSize: 24 }}>\r\n          Registration succeess :)\r\n        </p>\r\n      )}\r\n      {isError && (\r\n        <p style={{ fontFamily: `Roboto`, fontSize: 24 }}>\r\n          Registration not succeess :(\r\n        </p>\r\n      )}\r\n      {error?.data?.keyValue && (\r\n        <p style={{ fontFamily: `Roboto`, fontSize: 24 }}>\r\n          this email is already registed :(\r\n        </p>\r\n      )}\r\n      {error?.data?.message && (\r\n        <p style={{ fontFamily: `Roboto`, fontSize: 24 }}>\r\n          {error.data.message}\r\n        </p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\r\n\r\nconst RegisterPage = () => {\r\n  return <RegisterForm />;\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"names":["RegisterForm","useState","name","setName","email","setEmail","password","setPassword","error","setError","useRegisterRTKMutation","registerRTK","isError","isSuccess","console","log","handleImputChange","event","currentTarget","value","handleSubmit","preventDefault","user","resposnce","reset","onSubmit","className","css","type","onChange","style","fontFamily","fontSize","data","keyValue","message"],"sourceRoot":""}